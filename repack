#!/bin/bash
#
#
#

usage() {
    echo
    echo "Usage: $0 -i filename -o filename [-a] [-s] [fragment ...]"
}

AUTOBOOT=false
SERIAL=false
while getopts "hi:o:as" opt; do
    case "$opt" in
        i)
            INPUT=$OPTARG
            ;;
        o)
            OUTPUT=$OPTARG
            ;;
        a)
            AUTOBOOT=true
            ;;
        s)
            SERIAL=true
            ;;
        *)
            usage
            exit 1
            ;;
    esac
done

if [ -z "$INPUT" ]; then
    echo "Need input filename"
    exit 1
fi

if [ -z "$OUTPUT" ]; then
    echo "Need output filename"
    exit 1
fi

shift $((OPTIND-1))

set -e

TMP=$(mktemp --directory)
touch "$TMP"/preseed.cfg
for i in "$@"; do
    [ -e "$i" ] && cat "$i" >>"$TMP"/preseed.cfg
    shift
done

pushd "$TMP"
echo preseed.cfg | cpio -H newc -R 0:0 -o |gzip -9 >preseed.cpio.gz
popd

DIR=$(mktemp --directory)

xorriso -osirrox on -indev "$INPUT" -extract / "$DIR"
chmod -R a+w "$DIR"

# Detect original media details
DIST=unk
VERS=unk
ARCH=unk
for i in "$DIR"/dists/*/Release; do
    DIST=$(sed -n 's/^Label: *//p' "$i")
    VERS=$(sed -n 's/^Version: *//p' "$i")
    ARCH=$(sed -n 's/^Architectures: *//p' "$i")
done
VOLID="$DIST $VERS $ARCH auto"

# Add our new preseed to the various initrd files
for i in "$DIR"/install.amd/initrd.gz "$DIR"/install.amd/gtk/initrd.gz; do
    cat "$TMP"/preseed.cpio.gz >>"$i"
done

if [ "$AUTOBOOT" == "true" ]; then
    # BIOS autoboot
    echo "menu default" >> "$DIR"/isolinux/txt.cfg
    echo "timeout 50" >> "$DIR"/isolinux/isolinux.cfg
    rm -f "$DIR"/isolinux/spkgtk.cfg

    # EFI autoboot
    echo 'default="Install"' >> "$DIR"/boot/grub/grub.cfg
    echo 'timeout_style=menu' >> "$DIR"/boot/grub/grub.cfg
    echo 'timeout=5' >> "$DIR"/boot/grub/grub.cfg
    cat <<EOF >>"$DIR"/boot/grub/theme/1
+ progress_bar {
  left = 10%
  width = 80%
  top = 75%
  height = 31

  id = "__timeout__"
  text = "@TIMEOUT_NOTIFICATION_LONG@"
  text_color = "white"

  highlight_style = "*"
  bar_style = "*"
}
EOF
fi

if [ "$SERIAL" == "true" ]; then
    # ISOLINUX
    # Technically, this should be the first directive in the configuration file
    # However, tests show that it works
    echo "SERIAL 0" >> "$DIR"/isolinux/isolinux.cfg

    # Grub
    echo 'serial' >> "$DIR"/boot/grub/grub.cfg
    echo 'terminal_output gfxterm serial' >> "$DIR"/boot/grub/grub.cfg
    echo 'terminal_input gfxterm serial' >> "$DIR"/boot/grub/grub.cfg
fi

# Fix up checksums
pushd "$DIR"
find -follow -type f ! -name md5sum.txt -print0 | xargs -0 md5sum > md5sum.txt
popd

# TODO
# - theoretically could extract the $DIR/.disk/mkisofs command
xorriso -as mkisofs -r \
    -J -joliet-long -cache-inodes \
    -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin \
    -b isolinux/isolinux.bin -c isolinux/boot.cat -boot-load-size 4 \
    -boot-info-table -no-emul-boot -eltorito-alt-boot \
    -e boot/grub/efi.img -no-emul-boot \
    -isohybrid-gpt-basdat \
    -V "$VOLID" \
    -o "$OUTPUT" \
    "$DIR"

rm -rf "$DIR" "$TMP"
